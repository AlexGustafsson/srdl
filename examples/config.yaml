# The default path to the directory where srdl-sub will output its files.
# Can be overidden by using presets. Note that in most cases, media servers will
# require a specific file structure. Furthermore, as downloading a program also
# downloads images such as "backdrop.png", colliding files will be overwritten
# if each subscription doesn't output into separate directories.
# Defaults to the process' working directory
output: output

# LogLevel is a a string representation of the log level to use.
# Either debug, info, warn or error. Defaults to info
logLevel: debug

# Presets maps presets by a unique id.
# A preset defines a set of parameters influencing how a program is processed
presets:
  downloadLastMonth:
    # The maximum age of epsiodes to consider for download
    downloadRange: 720h

  keepForTwoMonths:
    # The maximum age of files and directories in the output directory before
    # they are removed
    retention: 336h

  throttle:
    # Throttling configuration
    throttling:
      # The delay before downloading an episode
      perDownload: 1s
      # The delay before processing an episode
      perEpisode: 1s
      # The delay before processing a subscription
      perSubscription: 1s
      # The maxmimum number of downloads / episodes to process per program
      maxDownloadsPerProgram: 1

  # Example output for audiobookshelf
  # See: https://www.audiobookshelf.org/docs/#podcast-directory-structure
  audiobookshelf:
    # Templated output path, using the program's metadata to work well with
    # audiobookshelf
    output: "output/audiobookshelf/{{.Program.Name}}"

  # Example output for jellyfin
  # See: https://jellyfin.org/docs/general/server/media/music/
  jellyfin:
    # Templated output path, using the configured artist and album to work well
    # with Jellyfin
    output: "output/jellyfin/{.Subscription.Artist}/{.Subscription.Album}"
